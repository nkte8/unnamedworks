---
import { getAllPosts } from "@/utils/newt.ts";
const url = Astro.url.pathname;
const cardUrl = new URL("/card/main.png", Astro.url);

import BaseLayout from "@/layouts/BookLayout.astro";
import Menu from "@/components/menu/main.astro";

export async function getStaticPaths() {
    const response = await getAllPosts();
    const range = (start: number, end: number) =>
        Array.from({ length: end - start + 1 }, (_, k) => k + start);
    const lastpage_index =
        Math.floor(response.items.length / gallery_contents_count) + 1;
    const pagelist = range(1, lastpage_index);
    const pg = (index: number): string =>
        gallery_url + "/page_" + String(index).padStart(2, "0");

    return pagelist.map((index) => ({
        params: {
            gallery_page: pg(index),
        },
        props: {
            index: index,
            post_index: (index - 1) * gallery_contents_count,
            is_nextpage: index !== lastpage_index ? pg(index + 1) : null,
            is_prevpage: index !== 1 ? pg(index - 1) : null,
        },
    }));
}

interface Props {
    index: number;
    post_index: number;
    is_nextpage: string | null;
    is_prevpage: string | null;
}
const { index, post_index, is_nextpage, is_prevpage } = Astro.props;
const pageTitle = "gallery - " + String(index).padStart(2, "0");

const response = await getAllPosts();
const posts = response.items.slice(
    post_index,
    post_index + gallery_contents_count,
);

import Pagetaglist from "@/components/pagetaglist.astro";
import Pagereftiles from "@/components/pagereftiles.astro";

// そのうちローカルデータとマージする仕組み（アーカイブシステム）を作る
import { post_url, gallery_url, gallery_contents_count } from "@/utils/vars.ts";
---

<BaseLayout pageTitle={pageTitle} , page_url={url} , cardUrl={cardUrl}>
    <Menu slot="header" />
    <Pagetaglist tags_url={gallery_url} posts={response.items} />
    <Pagereftiles
        index={index}
        posts={posts}
        is_nextpage={is_nextpage}
        is_prevpage={is_prevpage}
        baseurl={post_url}
    />
</BaseLayout>
